apiVersion: v1
data:
  JINA_LOG_LEVEL: INFO
  pythonunbuffered: '1'
  worker_class: uvicorn.workers.UvicornH11Worker
kind: ConfigMap
metadata:
  name: gateway-configmap
  namespace: {{ template "cas-helm.namespace" . }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway
  name: gateway
  namespace: {{ template "cas-helm.namespace" . }}
spec:
  ports:
  - name: port
    port: {{ $.Values.gateway.port }}
    protocol: TCP
    targetPort: {{ $.Values.gateway.port }}
{{- if $.Values.monitoring.enabled }}
  - name: monitoring
    port: {{ $.Values.monitoring.port }}
    protocol: TCP
    targetPort: {{ $.Values.monitoring.port }}
{{- end }}
  selector:
    app: gateway
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: {{ template "cas-helm.namespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: gateway
        jina_deployment_name: gateway
        ns: {{ template "cas-helm.namespace" . }}
        pod_type: GATEWAY
        shard_id: ''
    spec:
      containers:
      - args:
        - gateway
        - --k8s-namespace
        - {{ template "cas-helm.namespace" . }}
        - --polling
        - ANY
        - --port
        - {{ $.Values.gateway.port | squote }}
        - --expose-endpoints
        - '{}'
        - --protocol
        - {{ $.Values.gateway.protocol }}
        - --graph-description
        - '{"clip_encoder": ["end-gateway"], "start-gateway": ["clip_encoder"]}'
        - --deployments-addresses
        - '{"clip_encoder": ["grpc://clip-encoder.{{ template "cas-helm.namespace" . }}.svc:8080"]}'
        - --pod-role
        - GATEWAY
        {{- if $.Values.monitoring.enabled }}
        - --monitoring
        {{- end }}
        command:
        - jina
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: JINA_DEPLOYMENT_NAME
          value: gateway
        envFrom:
        - configMapRef:
            name: gateway-configmap
        image: jinaai/jina:3.3.25-py38-standard
        imagePullPolicy: IfNotPresent
        name: executor
        ports:
        - containerPort: {{ $.Values.gateway.port }}
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: {{ $.Values.gateway.port }}
