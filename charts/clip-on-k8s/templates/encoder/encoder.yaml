apiVersion: v1
data:
  JINA_LOG_LEVEL: INFO
  pythonunbuffered: '1'
  worker_class: uvicorn.workers.UvicornH11Worker
kind: ConfigMap
metadata:
  name: clip-encoder-configmap
  namespace: {{ template "cas-helm.namespace" . }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: clip-encoder
  name: clip-encoder
  namespace: {{ template "cas-helm.namespace" . }}
spec:
  ports:
  - name: port
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: clip-encoder
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clip-encoder
  namespace: {{ template "cas-helm.namespace" . }}
spec:
  replicas: {{ $.Values.replicas }}
  selector:
    matchLabels:
      app: clip-encoder
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: clip-encoder
        jina_deployment_name: clip_encoder
        ns: {{ template "cas-helm.namespace" . }}
        pod_type: WORKER
        shard_id: '0'
    spec:
      containers:
      - args:
        - executor
        - --name
        - clip_encoder
        - --k8s-namespace
        - {{ template "cas-helm.namespace" . }}
        - --uses
        - /tmp/config.yml
        - --port
        - '8080'
        - --replicas
        - {{ $.Values.replicas | squote }}
        - --uses-metas
        - '{}'
        - --uses-with
        - '{"name": "ViT-B/16", "device": "cpu", "minibatch_size": 64}'
        - --native
        command:
        - jina
        env:
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: JINA_DEPLOYMENT_NAME
          value: clip_encoder
        envFrom:
        - configMapRef:
            name: clip-encoder-configmap
        {{- if eq .Values.deviceName "cuda" }}
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}-cuda
        {{- else }}
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
        {{- end }}
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        name: executor
        ports:
        - containerPort: 8080
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 8080
